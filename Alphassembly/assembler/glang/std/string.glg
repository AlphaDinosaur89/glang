include "io.glg"
include "types.glg"
include "list.glg"
include "conversion.glg"

var string = 'String standard module'

# from python might have to change
var string.ascii_lowercase = 'abcdefghijklmnopqrstuvwxyz'
var string.ascii_uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
var string.ascii_letters = string.ascii_lowercase + string.ascii_uppercase
var string.digits = '0123456789'
var string.hexdigits = '0123456789abcdefABCDEF'
var string.octdigits = '01234567'
var string.punctuation = '!\"#$%&\'\()*+,-./:;<=>?@[\\]^_`{|}~'
var string.whitespace = "' \\t\\n\\r\\x0b\\x0c'"
var string.printable = string.digits + string.ascii_letters + string.punctuation + string.whitespace

def substring(str, start, end_):
    if start > end_:
        println("start argument must be lower than end argument in substring function")
    end

    var result = ""
	for i = start to end_:
		var result = result + getat(str, i)
	end
    
	if type(str) == types.ptr:
		setref(str, result)
	end
	
    return result
end

def indexOf(str, search):
	for i = 0 to len(str) - len(search) + 1:
		if substring(str, i, i+len(search)) == search:
			return i
		end
	end
	
	return -1
end

def lastIndexOf(str, search):
    var matches = []
	for i = 0 to len(str) - len(search) + 1:
		if substring(str, i, i+len(search)) == search:
			append(matches, i)
		end
	end
	
    if len(matches) == 0:
        return -1
    else:
        return getat(matches, len(matches)-1)
    end
end

def replace(s, search, replace):
	var result = ""
	var index = 0
	
	while index < len(s):
		var match_index = indexOf(substring(s, index, len(s)), search)
		if match_index == -1:
			var result = result + substring(s, index, len(s))
			break
		else:
			var result = result + substring(s, index, match_index) + replace
			var index = index + match_index + len(search)
		end
	end
	
	if type(s) == types.ptr:
		setref(s, result)
	end
	return result
end

def toUpperCase(d):
	var count = len(d)
	var string = ''
	var a = ord('a')
	var z = ord('z')
	for i = 0 to count:
		var e = ord(getat(d, i))
		var e = e - 32 * (e >= a and e <= z)
		var string = string + char(e)
	end
	
	return string
end

def toLowerCase(d):
    var count = len(d)
    var string = ''
    var A = ord('A')
    var Z = ord('Z')
    for i = 0 to count:
        var e = ord(getat(d, i))
        var e = e + 32 * (e >= A and e <= Z)
        var string = string + char(e)
    end
    
    return string
end

def reverse(str):
    var ret = ''

    for i = len(str)-1 to -1 step -1:
        var ret = ret + getat(str, i)
    end

    return ret
end

def split(str, delimiter):
	if delimiter == "":
		return tolist(str)
	end
	
	var len_ = len(delimiter)
	var iter = len(str) - len_ + 1
	var arr = [""]
	var idx = 0
	
	for i = 0 to iter:
		var sample = ""
		for x = i to i + len_:
			var sample = sample + getat(str, x)
		end
	
		var isSplit = sample == delimiter
		var isEnded = i == iter - 1
		
		if isSplit:
			var i = i + len_ - 1
			var idx = idx + 1
			append(*arr, "")
		else:
			if isEnded:
				setat(*arr, idx, getat(arr, idx) + sample)
			else:				
				setat(*arr, idx, getat(arr, idx) + getat(str, i))
			end
		end
	end
	
	return arr
end
